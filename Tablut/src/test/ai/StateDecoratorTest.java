/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package test.ai;

import it.unibo.ai.didattica.competition.ai.model.StateDecorator;
import it.unibo.ai.didattica.competition.ai.utility.TablutUtility;
import it.unibo.ai.didattica.competition.domain.Action;
import it.unibo.ai.didattica.competition.domain.State;
import it.unibo.ai.didattica.competition.domain.StateTablut;
import it.unibo.ai.didattica.competition.domain.Turn;
import org.junit.Before;
import org.junit.Test;
import org.junit.Assert;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;


public class StateDecoratorTest {
   private State initialState;
   private StateDecorator stateDecorator;
   @Before
    public void setUp() throws IOException {
        this.initialState = new StateTablut();
        this.stateDecorator = new StateDecorator(initialState);
       TablutUtility.getInstance()
               .movePawn(this.stateDecorator, new Action("b5", "b4", Turn.BLACK));
       TablutUtility.getInstance()
               .movePawn(this.stateDecorator, new Action("a4", "a2", Turn.BLACK));
    }
    @Test
    public void getAllWhiteMovesTest() throws IOException {

        List<Action> actions = this.stateDecorator.getAllWhiteMoves();
        List<Action> possibleActions = buildPossibleActionsWhite();
        actions.forEach(act -> Assert.assertTrue(possibleActions.contains(act)));
        possibleActions.forEach(act -> Assert.assertTrue(actions.contains(act)));
    }

    @Test
    public void getAllBlackMovesTest() throws IOException {
          List<Action> actions = this.stateDecorator.getAllBlackMoves();
        List<Action> subsetOfPossibleMoves = buildPossibleActionsBlack();
        subsetOfPossibleMoves.forEach(move -> Assert.assertTrue(actions.contains(move)));
    }


    private List<Action> buildPossibleActionsWhite() throws IOException {
       List<Action> listToReturn = new ArrayList<>();
        listToReturn.add(new Action("e3","f3", Turn.WHITE));
        listToReturn.add(new Action("e3","g3", Turn.WHITE));
        listToReturn.add(new Action("e3","h3", Turn.WHITE));
        listToReturn.add(new Action("e3","i3", Turn.WHITE));
        listToReturn.add(new Action("e3","d3", Turn.WHITE));
        listToReturn.add(new Action("e3","c3", Turn.WHITE));
        listToReturn.add(new Action("e3","b3", Turn.WHITE));
        listToReturn.add(new Action("e3","a3", Turn.WHITE));

        listToReturn.add(new Action("e4","f4", Turn.WHITE));
        listToReturn.add(new Action("e4","g4", Turn.WHITE));
        listToReturn.add(new Action("e4","h4", Turn.WHITE));
        listToReturn.add(new Action("e4","d4", Turn.WHITE));
        listToReturn.add(new Action("e4","c4", Turn.WHITE));

        listToReturn.add(new Action("c5","c4", Turn.WHITE));
        listToReturn.add(new Action("c5","c3", Turn.WHITE));
        listToReturn.add(new Action("c5","c2", Turn.WHITE));
        listToReturn.add(new Action("c5","c1", Turn.WHITE));
        listToReturn.add(new Action("c5","c6", Turn.WHITE));
        listToReturn.add(new Action("c5","c7", Turn.WHITE));
        listToReturn.add(new Action("c5","c8", Turn.WHITE));
        listToReturn.add(new Action("c5","c9", Turn.WHITE));

        listToReturn.add(new Action("d5","d4", Turn.WHITE));
        listToReturn.add(new Action("d5","d3", Turn.WHITE));
        listToReturn.add(new Action("d5","d2", Turn.WHITE));
        listToReturn.add(new Action("d5","d6", Turn.WHITE));
        listToReturn.add(new Action("d5","d7", Turn.WHITE));
        listToReturn.add(new Action("d5","d8", Turn.WHITE));

        listToReturn.add(new Action("f5","f4", Turn.WHITE));
        listToReturn.add(new Action("f5","f3", Turn.WHITE));
        listToReturn.add(new Action("f5","f2", Turn.WHITE));
        listToReturn.add(new Action("f5","f6", Turn.WHITE));
        listToReturn.add(new Action("f5","f7", Turn.WHITE));
        listToReturn.add(new Action("f5","f8", Turn.WHITE));

        listToReturn.add(new Action("g5","g4", Turn.WHITE));
        listToReturn.add(new Action("g5","g3", Turn.WHITE));
        listToReturn.add(new Action("g5","g2", Turn.WHITE));
        listToReturn.add(new Action("g5","g1", Turn.WHITE));
        listToReturn.add(new Action("g5","g6", Turn.WHITE));
        listToReturn.add(new Action("g5","g7", Turn.WHITE));
        listToReturn.add(new Action("g5","g8", Turn.WHITE));
        listToReturn.add(new Action("g5","g9", Turn.WHITE));


        listToReturn.add(new Action("e6","f6", Turn.WHITE));
        listToReturn.add(new Action("e6","g6", Turn.WHITE));
        listToReturn.add(new Action("e6","h6", Turn.WHITE));
        listToReturn.add(new Action("e6","d6", Turn.WHITE));
        listToReturn.add(new Action("e6","c6", Turn.WHITE));
        listToReturn.add(new Action("e6","b6", Turn.WHITE));

        listToReturn.add(new Action("e7","f7", Turn.WHITE));
        listToReturn.add(new Action("e7","g7", Turn.WHITE));
        listToReturn.add(new Action("e7","h7", Turn.WHITE));
        listToReturn.add(new Action("e7","i7", Turn.WHITE));
        listToReturn.add(new Action("e7","d7", Turn.WHITE));
        listToReturn.add(new Action("e7","c7", Turn.WHITE));
        listToReturn.add(new Action("e7","b7", Turn.WHITE));
        listToReturn.add(new Action("e7","a7", Turn.WHITE));

        return listToReturn;
    }

    private List<Action> buildPossibleActionsBlack() throws IOException {
        List<Action> listToReturn = new ArrayList<>();
        listToReturn.add(new Action("a5","a4", Turn.BLACK));
        listToReturn.add(new Action("a5","a3", Turn.BLACK));
        listToReturn.add(new Action("a5","b5", Turn.BLACK));

        listToReturn.add(new Action("a2","a1", Turn.BLACK));
        listToReturn.add(new Action("a2","b2", Turn.BLACK));
        listToReturn.add(new Action("a2","c2", Turn.BLACK));
        listToReturn.add(new Action("a2","d2", Turn.BLACK));
        listToReturn.add(new Action("a2","a3", Turn.BLACK));

        listToReturn.add(new Action("b4","b3", Turn.BLACK));
        listToReturn.add(new Action("b4","b2", Turn.BLACK));
        listToReturn.add(new Action("b4","b1", Turn.BLACK));
        listToReturn.add(new Action("b4","c4", Turn.BLACK));
        listToReturn.add(new Action("b4","d4", Turn.BLACK));
        return listToReturn;
    }
}
